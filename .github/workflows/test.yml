name: Build non-stripped binary
on:
  workflow_dispatch:

jobs:
  build-linux-static:
    strategy:
      fail-fast: false
      matrix:
        include:
        - arch: amd64
          target: x86_64-linux-musl
        - arch: arm64
          target: aarch64-linux-musl
    name: Build ${{ matrix.arch }} Linux static binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Lesmiscore/musl-cross-compilers@heracles
        id: musl
        with:
          target: ${{ matrix.target }}
      - run: |
          VER=`curl https://www.rarlab.com/rar_add.htm | grep -F '>UnRAR source<' | sed -E 's/^.*href="rar\/(unrarsrc-[0-9.]+\.tar\.gz)".*$/\1/'`
          #VER=unrarsrc-6.2.10.tar.gz
          echo $VER
          wget https://www.rarlab.com/rar/$VER
          tar zxf $VER
          cd unrar
          patch -s -p1 < ../unrar-gcc.patch
          sed -i -E '/^(CXX|STRIP|AR)=/d' makefile
          sed -i '/$(STRIP) /d' makefile
          sed -i 's/^LDFLAGS=/LDFLAGS=-static /' makefile
          sed -i 's/^CXXFLAGS=/CXXFLAGS=-std=c++11 /' makefile
          make
        env:
          CXX: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-c++
          AR: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-ar
          STRIP: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-strip
      - run: ./unrar/unrar
        if: ${{ matrix.arch == 'amd64' }}
      - uses: actions/upload-artifact@v3
        with:
          path: unrar/unrar
          name: unrar-linux-${{ matrix.arch }}
          retention-days: 5

  build-mac-x64:
    name: Build x64 MacOS binary
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          VER=`curl https://www.rarlab.com/rar_add.htm | grep -F '>UnRAR source<' | sed -E 's/^.*href="rar\/(unrarsrc-[0-9.]+\.tar\.gz)".*$/\1/'`
          #VER=unrarsrc-6.2.10.tar.gz
          echo $VER
          wget https://www.rarlab.com/rar/$VER
          tar zxf $VER
          cd unrar
          patch -s -p1 < ../unrar-gcc.patch
          sed -i .old 's/^CXXFLAGS=/CXXFLAGS=-std=c++11 /' makefile
          sed -i .old '/$(STRIP) /d' makefile
          make
      - run: ./unrar/unrar
      - uses: actions/upload-artifact@v3
        with:
          path: unrar/unrar
          name: unrar-macos-x64
          retention-days: 5

  build-mac-arm64:
    name: Build arm64 MacOS binary
    # avoid OpenSSL 3.0.2 on 22.04: https://github.com/tpoechtrager/osxcross/issues/349
    runs-on: ubuntu-20.04
    steps:
      - uses: mbround18/setup-osxcross@main  # OSXCROSS_TARGET unavailable in v1.1
        with:
          osx-version: "12.3"
      - uses: actions/checkout@v3
      - run: |
          VER=`curl https://www.rarlab.com/rar_add.htm | grep -F '>UnRAR source<' | sed -E 's/^.*href="rar\/(unrarsrc-[0-9.]+\.tar\.gz)".*$/\1/'`
          #VER=unrarsrc-6.2.10.tar.gz
          echo $VER
          wget https://www.rarlab.com/rar/$VER
          tar zxf $VER
          cd unrar
          patch -s -p1 < ../unrar-gcc.patch
          sed -i -E '/^(CXX|STRIP|AR)=/d' makefile
          sed -i 's/^CXXFLAGS=/CXXFLAGS=-std=c++11 /' makefile
          sed -i '/$(STRIP) /d' makefile
          make
        env:
          CXX: oa64-clang++
          AR: arm64-apple-darwin21.4-ar
          STRIP: arm64-apple-darwin21.4-strip
      - run: |
          wget -q -O- https://github.com/indygreg/apple-platform-rs/releases/download/apple-codesign%2F0.22.0/apple-codesign-0.22.0-x86_64-unknown-linux-musl.tar.gz | tar zxf -
          apple-codesign*/rcodesign sign unrar/unrar
      - if: ${{ failure() }}
        run: |
          ls
          ls apple-codesign*
          find . -name rcodesign
      - uses: actions/upload-artifact@v3
        with:
          path: unrar/unrar
          name: unrar-macos-arm64
          retention-days: 5
