name: Build binary
on:
  workflow_dispatch:

jobs:
  build-win-arm:
    name: Build Windows ARM64 binary
    runs-on: windows-2022
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/checkout@v3
      - run: |
          aria2c https://www.rarlab.com/rar/unrarsrc-6.2.10.tar.gz
          tar -xf unrarsrc-6.2.10.tar.gz
          cd unrar
          "C:\Program Files\Git\usr\bin\patch.exe" -s -p1 < ..\unrar-gcc.patch
        shell: cmd
      - run: msbuild -property:Configuration=Release -property:Platform=ARM64 UnRAR.vcxproj
        working-directory: unrar
      - run: move "unrar\ARM64\Release\UnRAR.exe" UnRAR.exe && 7z a -t7z -mx=9 unrar.7z UnRAR.exe
      - uses: actions/upload-artifact@v3
        with:
          path: ./unrar.7z
          name: unrar-windows-arm64.7z
          retention-days: 5
      - run: rmdir /s /q unrar\ARM64
      - run: msbuild -property:Configuration=Release -property:Platform=ARM64 UnRARDll.vcxproj
        working-directory: unrar
      - run: move "unrar\ARM64\Release\unrar.dll" unrar.dll && move "unrar\ARM64\Release\UnRAR.lib" UnRAR.lib && move "unrar\ARM64\Release\UnRAR.pdb" UnRAR.pdb && 7z a -t7z -mx=9 unrar-dll.7z unrar.dll UnRAR.lib UnRAR.pdb
      - uses: actions/upload-artifact@v3
        with:
          path: ./unrar-dll.7z
          name: unrardll-windows-arm64.7z
          retention-days: 5
  
  build-linux-static:
    strategy:
      fail-fast: false
      matrix:
        include:
        - arch: amd64
          xz_bcj: --x86
          target: x86_64-linux-musl
        - arch: arm64
          xz_bcj: # --arm64 # requires xz utils >=5.4 to decompress
          target: aarch64-linux-musl
    name: Build ${{ matrix.arch }} Linux static binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Lesmiscore/musl-cross-compilers@heracles
        id: musl
        with:
          target: ${{ matrix.target }}
      - run: |
          wget https://www.rarlab.com/rar/unrarsrc-6.2.10.tar.gz
          tar zxf unrarsrc-6.2.10.tar.gz
          cd unrar
          patch -s -p1 < ../unrar-gcc.patch
          sed -i -E '/^(CXX|STRIP|AR)=/d' makefile
          sed -i 's/^LDFLAGS=/LDFLAGS=-static /' makefile
          sed -i 's/^CXXFLAGS=/CXXFLAGS=-std=c++11 /' makefile
          make
        env:
          CXX: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-c++
          AR: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-ar
          STRIP: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-strip
      - run: ./unrar/unrar
        if: ${{ matrix.arch == 'amd64' }}
      - run: xz -9e ${{ matrix.xz_bcj }} --lzma2 unrar/unrar -c > unrar.xz
      - uses: actions/upload-artifact@v3
        with:
          path: ./unrar.xz
          name: unrar-linux-${{ matrix.arch }}.xz
          retention-days: 5

  build-mac-x64:
    name: Build x64 MacOS binary
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          wget https://www.rarlab.com/rar/unrarsrc-6.2.10.tar.gz
          tar zxf unrarsrc-6.2.10.tar.gz
          cd unrar
          patch -s -p1 < ../unrar-gcc.patch
          sed -i .old 's/^CXXFLAGS=/CXXFLAGS=-std=c++11 /' makefile
          make
      - run: ./unrar/unrar
      - run: xz -9e --x86 --lzma2 unrar/unrar -c > unrar.xz
      - uses: actions/upload-artifact@v3
        with:
          path: ./unrar.xz
          name: unrar-macos-x64.xz
          retention-days: 5

  build-mac-arm64:
    name: Build arm64 MacOS binary
    # avoid OpenSSL 3.0.2 on 22.04: https://github.com/tpoechtrager/osxcross/issues/349
    runs-on: ubuntu-20.04
    steps:
      - uses: mbround18/setup-osxcross@main  # OSXCROSS_TARGET unavailable in v1.1
        with:
          osx-version: "12.3"
      - uses: actions/checkout@v3
      - run: |
          wget https://www.rarlab.com/rar/unrarsrc-6.2.10.tar.gz
          tar zxf unrarsrc-6.2.10.tar.gz
          cd unrar
          patch -s -p1 < ../unrar-gcc.patch
          sed -i -E '/^(CXX|STRIP|AR)=/d' makefile
          sed -i 's/^CXXFLAGS=/CXXFLAGS=-std=c++11 /' makefile
          make
        env:
          CXX: oa64-clang++
          AR: arm64-apple-darwin21.4-ar
          STRIP: arm64-apple-darwin21.4-strip
      - run: |
          wget -q -O- https://github.com/indygreg/apple-platform-rs/releases/download/apple-codesign%2F0.22.0/apple-codesign-0.22.0-x86_64-unknown-linux-musl.tar.gz | tar zxf -
          apple-codesign*/rcodesign sign unrar/unrar
      - if: ${{ failure() }}
        run: |
          ls
          ls apple-codesign*
          find . -name rcodesign
      - run: xz -9e --lzma2 unrar/unrar -c > unrar.xz
      - uses: actions/upload-artifact@v3
        with:
          path: ./unrar.xz
          name: unrar-macos-arm64.xz
          retention-days: 5
